% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/concurrence.R
\name{check_concurrence}
\alias{check_concurrence}
\title{Get discounted duplicates from the dataframe.}
\usage{
check_concurrence(df_cleaned, df_extracted, .by = "assessor")
}
\arguments{
\item{df}{A dataframe containing the data to be processed.}
}
\value{
A dataframe containing discounted duplicates.
}
\description{
This function performs the following steps:

1. Identify duplicates based on facility and client_id and remove dupe_count column.
2. Identify perfect duplicates based on specific columns and remove dupe_count column.
3. Identify repeated perfect duplicates and select the second occurrence.
4. Identify partial duplicates by excluding perfect duplicates based on specific columns.
5. Combine repeated perfect duplicates and partial duplicates into a single dataframe.
}
\examples{
# Create a sample dataframe
df <- data.frame(
  facility = c("A", "A", "B", "B", "C", "C"),
  client_id = c(1, 1, 2, 3, 4, 4),
  state = c("NY", "NY", "CA", "TX", "FL", "FL"),
  date_of_assessment = as.Date(c("2022-01-01", "2022-01-01", "2022-01-01", "2022-01-01", "2022-01-01", "2022-01-01")),
  sex = c("M", "M", "F", "M", "F", "F"),
  art_start_date = as.Date(c("2021-12-01", "2021-12-01", "2022-01-01", "2022-01-01", NA, NA)),
  last_pickup_date = as.Date(c("2022-01-28", "2022-01-28", "2022-01-28", "2022-01-28", "2022-01-28", "2022-01-28")),
  days_of_arv_refill = c(30, 30, 28, 28, 30, 30),
  abstracted_sex = c("M", "M", "F", "M", "F", "F"),
  abstracted_art_start_date = as.Date(c("2021-12-01", "2021-12-01", "2022-01-01", "2022-01-01", NA, NA)),
  abstracted_last_pickup_date = as.Date(c("2022-01-28", "2022-01-28", "2022-01-28", "2022-01-28", "2022-01-28", "2022-01-28")),
  abstracted_days_of_arv_refill = c(30, 30, 28, 28, 30, 30),
  submitted_by = c("X", "X", "Y", "Z", "W", "W")
)

# Get discounted duplicates
result <- get_discounted_duplicates(df)

}
